---
title: "forest_plot"
author: "Kasandra Ascuña-Durand / Ariana Cardenas"
format: html
editor: visual
---

# STUDY

## Conjunto de datos

```{r}
forest <- readr::read_rds(
  "data/processed/model_results.rds")
```

## Librerías

```{r}
library(tidyverse)
library(ggplot2)
```

## Exploración

```{r}
colnames(forest)
```

## Paso 1: Ajustar el df para el forest plot

```{r}
forest$var <- ifelse(is.na(forest$IRR1), 
                      forest$var,
                      paste0("   ", forest$var))

forest$model_type1 <- replace(as.character(forest$model_type1), is.na(forest$model_type1), "")
forest$pvalue1 <- replace(as.character(forest$pvalue1), is.na(forest$pvalue1), "")
forest$model_type2 <- replace(as.character(forest$model_type2), is.na(forest$model_type2), "")
forest$pvalue2 <- replace(as.character(forest$pvalue2), is.na(forest$pvalue2), "")

forest$`Adjusted model` <- paste(rep(" ", 20), collapse = " ")
forest$`Unadjusted model` <- paste(rep(" ", 20), collapse = " ")

# Create a confidence interval column to display

forest$`RR (95% CI)1` <- ifelse(is.na(forest$IRR1), "",
                             sprintf("%.2f (%.2f to %.2f)",
                                     forest$IRR1, forest$lower1, forest$upper1)) 

forest$`RR (95% CI)2` <- ifelse(is.na(forest$IRR2), "",
                             sprintf("%.2f (%.2f to %.2f)",
                                     forest$IRR2, forest$lower2, forest$upper2)) 

forest <- forest %>%
  relocate(`Adjusted model`, .after = `upper1`) %>%
  relocate(`RR (95% CI)1`, .after = `Adjusted model`) %>%
  relocate(`pvalue2`, .after = `RR (95% CI)2`)

head(forest)
```

## Graficar el forest plot

```{r fig.align="center", echo = FALSE,fig.height = 12, fig.width = 14}
study <- forestploter::forest(forest[,c(1, 2, 6:9, 13:15)],
            est = list(forest$IRR1,
                       forest$IRR2),
            lower = list(forest$lower1,
                         forest$lower2), 
            upper = list(forest$upper1,
                         forest$upper2),
            ci_column = c(3, 7),
            ref_line = c(1, 1),
            xlim = list(c(-1, 5), c(-1, 5))
#            ticks_at = list(c(0.1, 0.5, 1, 2.5), c(-1, 0, 2)),
#            xlab = c("OR", "Beta"),
           )

plot(study)
```

```{r}
ggsave("figures/forest_plot/study.png", study, height = 16, width = 14)
```

# Work

## Conjunto de datos

```{r}
forest_1 <- readr::read_csv(
  "data/processed/forest_work.csv")
```

## Librerías

```{r}
library(tidyverse)
library(ggplot2)
```

## Exploración

```{r}
colnames(forest_1)
```

## Paso 1: Ajustar el df para el forest plot

```{r}
forest_1$var <- ifelse(is.na(forest_1$IRR1), 
                      forest_1$var,
                      paste0("   ", forest_1$var))

forest_1$model_type1 <- replace(as.character(forest_1$model_type1), is.na(forest_1$model_type1), "")
forest_1$pvalue1 <- replace(as.character(forest_1$pvalue1), is.na(forest_1$pvalue1), "")
forest_1$model_type2 <- replace(as.character(forest_1$model_type2), is.na(forest_1$model_type2), "")
forest_1$pvalue2 <- replace(as.character(forest_1$pvalue2), is.na(forest_1$pvalue2), "")

forest_1$`Adjusted model` <- paste(rep(" ", 20), collapse = " ")
forest_1$`Unadjusted model` <- paste(rep(" ", 20), collapse = " ")

# Create a confidence interval column to display

forest_1$`RR (95% CI)1` <- ifelse(is.na(forest_1$IRR1), "",
                             sprintf("%.2f (%.2f to %.2f)",
                                     forest_1$IRR1, forest_1$lower1, forest_1$upper1)) 

forest_1$`RR (95% CI)2` <- ifelse(is.na(forest_1$IRR2), "",
                             sprintf("%.2f (%.2f to %.2f)",
                                     forest_1$IRR2, forest_1$lower2, forest_1$upper2)) 

forest_1 <- forest_1 %>%
  relocate(`Adjusted model`, .after = `upper1`) %>%
  relocate(`RR (95% CI)1`, .after = `Adjusted model`) %>%
  relocate(`pvalue2`, .after = `RR (95% CI)2`)

head(forest_1)
```

## Graficar el forest plot

```{r fig.align="center", echo = FALSE,fig.height = 12, fig.width = 14}
work <- forestploter::forest(forest_1[,c(1, 2, 6:9, 13:15)],
            est = list(forest_1$IRR1,
                       forest_1$IRR2),
            lower = list(forest_1$lower1,
                         forest_1$lower2), 
            upper = list(forest_1$upper1,
                         forest_1$upper2),
            ci_column = c(3, 7),
            ref_line = c(1, 1),
            xlim = list(c(-1, 5), c(-1, 5))
#            ticks_at = list(c(0.1, 0.5, 1, 2.5), c(-1, 0, 2)),
#            xlab = c("OR", "Beta"),
           )

plot(work)
```

```{r}
ggsave("figures/forest_plot/work.png", work, height = 16, width = 14)
```

# Total

## Conjunto de datos

```{r}
forest_2 <- readr::read_rds(
  "data/processed/model_results.rds")
```

## Librerías

```{r}
library(tidyverse)
library(ggplot2)
```

## Exploración

```{r}
colnames(forest_2)
```

## Paso 1: Ajustar el df para el forest plot

```{r}
forest_2$var <- ifelse(is.na(forest_2$IRR1), 
                      forest_2$var,
                      paste0("   ", forest_2$var))

forest_2$model_type1 <- replace(as.character(forest_2$model_type1), is.na(forest_2$model_type1), "")
forest_2$pvalue1 <- replace(as.character(forest_2$pvalue1), is.na(forest_2$pvalue1), "")
forest_2$model_type2 <- replace(as.character(forest_2$model_type2), is.na(forest_2$model_type2), "")
forest_2$pvalue2 <- replace(as.character(forest_2$pvalue2), is.na(forest_2$pvalue2), "")

forest_2$`Adjusted model` <- paste(rep(" ", 20), collapse = " ")
forest_2$`Unadjusted model` <- paste(rep(" ", 20), collapse = " ")

# Create a confidence interval column to display

forest_2$`RR (95% CI)1` <- ifelse(is.na(forest_2$IRR1), "",
                             sprintf("%.2f (%.2f to %.2f)",
                                     forest_2$IRR1, forest_2$lower1, forest_2$upper1)) 

forest_2$`RR (95% CI)2` <- ifelse(is.na(forest_2$IRR2), "",
                             sprintf("%.2f (%.2f to %.2f)",
                                     forest_2$IRR2, forest_2$lower2, forest_2$upper2)) 

forest_2 <- forest_2 %>%
  relocate(`Adjusted model`, .after = `upper1`) %>%
  relocate(`RR (95% CI)1`, .after = `Adjusted model`) %>%
  relocate(`pvalue2`, .after = `RR (95% CI)2`)

head(forest_2)
```

## Graficar el forest plot

```{r fig.align="center", echo = FALSE,fig.height = 12, fig.width = 14}
total <- forestploter::forest(forest_2[,c(1, 2, 6:9, 13:15)],
            est = list(forest_2$IRR1,
                       forest_2$IRR2),
            lower = list(forest_2$lower1,
                         forest_2$lower2), 
            upper = list(forest_2$upper1,
                         forest_2$upper2),
            ci_column = c(3, 7),
            ref_line = c(1, 1),
            xlim = list(c(-1, 5), c(-1, 5))
#            ticks_at = list(c(0.1, 0.5, 1, 2.5), c(-1, 0, 2)),
#            xlab = c("OR", "Beta"),
           )

plot(total)
```

```{r}
ggsave("figures/forest_plot/total.png", total, height = 16, width = 14)
```

```{r}
library(cowplot)
```

```{r}
combined_fplot <- plot_grid(study, work, total, ncol = 3)
ggsave("figures/forest_plot/combined_forest.png", combined_fplot, height = 40, width = 30)
```
